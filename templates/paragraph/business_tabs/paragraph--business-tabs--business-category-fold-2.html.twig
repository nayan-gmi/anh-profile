{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% block paragraph %}
  {% block content %}

  {% if paragraph.field_hide_this_block.value != '1' %}

    <section class="second-level-tab-section">
      <div class="blue-wavy-pattern2">
        <img class="" src="{{ base_path }}/assets/images/blue-wavy-background.svg" alt="BG Pattern" />
      </div>
      <div class="container">
        <div class="second-level-desc">
          <h2>{{ content.field_block_heading }}</h2>
          {{ content.field_block_description }}
        </div>
        <div class="second-level-tab-wrap tab-section">
          <div class="tab-heading">
            {% for key, item in content.field_tab_content %}
              {% if key|first != '#' %}
                {% if item['#paragraph'].field_hide_this_block.value != '1' %}
                  <a href="#tab-{{ key }}" class="tab-link {% if key == 0 %}active{% endif %}" data-tab="tab-{{ key }}">
                    {% set image = item['#paragraph'].field_image.entity %}
                    {% if image %}
                      {% set file_path = image.uri.value %}
                      {% if file_path ends with '.svg' %}
                        {{ file_path | inline_svg | raw }}
                      {% else %}
                        <img src="{{ file_url(image.uri.value) }}" alt="{{ image.alt|default('Image') }}">
                      {% endif %}
                    {% endif %}
                    {{ item['#paragraph'].field_block_heading.value }}
                  </a>
                {% endif %}
              {% endif %}
            {% endfor %}
            
          </div>
          <div class="content-box">
            {{ content.field_tab_content }}
          </div>
        </div>
      </div>
    </section>

  {% endif %} 
{% endblock %}
{% endblock paragraph %}