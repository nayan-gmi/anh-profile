{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% block paragraph %}
  {% block content %}
    {% if paragraph.field_hide_this_block.value != '1' %}
      <div class="swiper-slide">
        <div class="more-abt-sliderbox">
          <div class="more-abt-slider-img">
            {% if paragraph.field_cta_button is not empty %}
              {% set url = paragraph.field_cta_button.0.url %}
              {% set target = '' %}
              {% if 'http' in url|render|render %}
                {% set target = ' target="_blank" ' %}
              {% endif %}
              {% if '.pdf' in url|render|render %}
                {% set target = ' target="_blank" ' %}
              {% endif %}
              <a class="readmore-arrow-btn-inner" {{ target }} href="{{ url }}">
                <svg xmlns="http://www.w3.org/2000/svg" width="13.675" height="13.675" viewBox="0 0 13.675 13.675">
                  <g id="arrow-up-right" transform="translate(-5.372 -6.117)">
                    <line id="Line_365" data-name="Line 365" y1="11.432" x2="11.432" transform="translate(6.433 7.298)" fill="none" stroke="#4180D7" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></line>
                    <path id="Path_103852" data-name="Path 103852" d="M7,7H18.578V18.578" transform="translate(-0.281 -0.133)" fill="none" stroke="#4180D7" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
                  </g>
                </svg>
              </a>
            {% endif %}
          {{ content.field_image }}
         </div>
          <div class="more-abt-slider-descr">
          
            <h4>{{ content.field_block_heading }}</h4>
            <div class="p-line">
              {{ content.field_block_description }}
            </div>
          </div>
        </div>

      </div>
    {% endif %}
  {% endblock %}
{% endblock paragraph %}